apiVersion: v1
kind: page
spec:
  id: 7bGf8iM
  title: page1
  content:
    - component: PageRow
      name: pageRow
      children:
        - component: Tabs
          name: tabs
          layout:
            horizontalAlign: start
          props:
            tabs:
              - title: Books
                name: books
              - title: Add Book
                name: add-book
            defaultValue: books
    - component: PageRow
      name: pageRow7
      children:
        - component: Container
          name: container1
          props:
            sx:
              $$jsExpression: >
                tabs.value == "add-book" ? { display: "block" } : { display:
                "none" }
          children:
            - component: PageRow
              name: pageRow8
              children:
                - component: PageColumn
                  name: pageColumn3
                  layout:
                    columnSize: 1
                  children:
                    - component: Text
                      name: text
                      layout:
                        horizontalAlign: center
                      props:
                        value: Publish Your Book
                        variant: h1
                        mode: text
                        sx:
                          textAlign: center
                          color: blue
                          fontSize: 40px
                          marginBottom: 20px
                    - component: Container
                      name: container
                      children:
                        - component: PageRow
                          name: pageRow3
                          children:
                            - component: Form
                              name: form
                              layout:
                                columnSize: 1
                              props:
                                hasResetButton: true
                                formControlsAlign: end
                                onSubmit:
                                  $$jsExpressionAction: await addBook.fetch()
                              children:
                                - component: PageRow
                                  name: pageRow4
                                  children:
                                    - component: PageColumn
                                      name: pageColumn1
                                      layout:
                                        columnSize: 1
                                      children:
                                        - component: PageRow
                                          name: pageRow5
                                          props:
                                            justifyContent: start
                                          children:
                                            - component: PageColumn
                                              name: pageColumn
                                              layout:
                                                columnSize: 1
                                              children:
                                                - component: TextField
                                                  name: authorField
                                                  props:
                                                    label: Author Name
                                                    isRequired: true
                                                    isInvalid:
                                                      $$jsExpression: >
                                                        // authorField.value

                                                        new RegExp(/[^a-zA-Z0-9 ]/g).test(authorField.value)
                                                    fullWidth: true
                                                    minLength: 3
                                                - component: TextField
                                                  name: bookCoverImg
                                                  props:
                                                    label: Book Cover Img Link
                                                    fullWidth: true
                                                    isRequired: true
                                                - component: TextField
                                                  name: ebookLink
                                                  props:
                                                    label: E-Book Link
                                                    minLength: -4
                                                    fullWidth: true
                                                - component: TextField
                                                  name: title
                                                  props:
                                                    isRequired: true
                                                    isInvalid:
                                                      $$jsExpression: >
                                                        // authorField.value

                                                        new RegExp(/[^a-zA-Z0-9 ]/g).test(title.value)
                                                    minLength: 5
                                                    fullWidth: true
                                                    label: Title
                                            - component: PageColumn
                                              name: pageColumn2
                                              layout:
                                                columnSize: 1
                                              children:
                                                - component: Select
                                                  name: country
                                                  layout:
                                                    horizontalAlign: center
                                                  props:
                                                    isRequired: true
                                                    fullWidth: true
                                                    label: Country
                                                    options:
                                                      - Australia
                                                      - Austria
                                                      - Bahrain
                                                      - Belgium
                                                      - UK
                                                      - India
                                                - component: Select
                                                  name: language
                                                  props:
                                                    options:
                                                      - Hindi
                                                      - English
                                                      - Gujarati
                                                    label: Language
                                                    fullWidth: true
                                                    isRequired: true
                                                - component: TextField
                                                  name: numberOfPage
                                                  props:
                                                    label: page
                                                    isRequired: true
                                                    minLength: 3
                                                    isInvalid:
                                                      $$jsExpression: >
                                                        // authorField.value

                                                        new RegExp(/[^0-9]/g).test(page.value)
                                                    fullWidth: true
                                                - component: DatePicker
                                                  name: year
                                                  props:
                                                    isRequired: true
                                                    name: Year
                                                    fullWidth: true
                                                    format:
                                                      $$jsExpression: |
                                                        "YYYY"
    - component: PageRow
      name: pageRow9
      children:
        - component: Container
          name: container2
          props:
            sx:
              $$jsExpression: >
                tabs.value == "books" ? { display: "block" } : { display: "none"
                }
          children:
            - component: PageRow
              name: pageRow10
              children:
                - component: PageColumn
                  name: pageColumn4
                  layout:
                    columnSize: 1
                  children:
                    - component: PageRow
                      name: pageRow2
                      props:
                        justifyContent: start
                      children:
                        - component: Button
                          name: deleteButton
                          props:
                            content:
                              $$jsExpression: >
                                `Delete ${dataGrid.selection ?
                                dataGrid.selection?.title : ""} Book`
                            onClick:
                              $$jsExpressionAction: await deleteBookById.fetch()
                            disabled:
                              $$jsExpression: |
                                dataGrid?.selection?.id ? false : true
                        - component: Button
                          name: button1
                          props:
                            onClick:
                              $$jsExpressionAction: "tabs.value=\"add-book\"\r

                                \r

                                authorField.val\
                                ue=form.value.authorField=dataGrid?.selection?.\
                                author;\r

                                //
                                form.value.authorField=dataGrid?.selection?.aut\
                                hor;\r

                                bookCoverImg.va\
                                lue=form.value.bookCoverImg=dataGrid?.selection\
                                ?.imageLink;\r

                                ebookLink.value\
                                ,form.value.ebookLink=dataGrid?.selection?.link;\
                                \r

                                title.value,for\
                                m.value.title=dataGrid?.selection?.title,\r

                                country.value,f\
                                orm.value.country=dataGrid?.selection?.country\r\
                                \n"
                            disabled:
                              $$jsExpression: |
                                dataGrid?.selection?.id ? false : true
                            content:
                              $$jsExpression: >
                                `Edit ${dataGrid.selection ?
                                dataGrid.selection?.title : ""} Book`
                    - component: DataGrid
                      name: dataGrid
                      props:
                        rows:
                          $$jsExpression: |
                            bookList.data
                        columns:
                          - field: author
                            type: string
                          - field: country
                            type: string
                          - field: imageLink
                            type: image
                          - field: language
                            type: string
                          - field: link
                            type: link
                          - field: pages
                            type: number
                          - field: title
                            type: string
                          - field: year
                            type: number
                        sx:
                          $$jsExpression: >
                            tabs.value == "books" ? { display: "block" } : {
                            display: "none" }
                        density: standard
                        height: 502
  queries:
    - name: bookList
      query:
        kind: rest
        url: https://fake-json-server-4yn5.onrender.com/books
        searchParams: []
        headers: []
        method: GET
    - name: addBook
      mode: mutation
      query:
        kind: rest
        url: https://fake-json-server-4yn5.onrender.com/books
        headers: []
        body:
          kind: raw
          content:
            $$jsExpression: |
              JSON.stringify({
                author: parameters.author,
                country: parameters.country,
                imageLink: parameters.imageLink,
                language: parameters.language,
                link: parameters.link,
                pages: parameters.pages,
                title: parameters.title,
                year: parameters.year,
                id: Math.round(Math.random()),
              })
          contentType: application/json
        method: POST
      parameters:
        - name: author
          value:
            $$jsExpression: |
              "ksjdkj"
        - name: country
          value:
            $$jsExpression: |
              country.value
        - name: imageLink
          value:
            $$jsExpression: |
              bookCoverImg.value
        - name: language
          value:
            $$jsExpression: |
              language.value
        - name: pages
          value:
            $$jsExpression: |
              numberOfPage.value
        - name: year
          value:
            $$jsExpression: |
              new Date(year.value).getFullYear()
        - name: link
          value:
            $$jsExpression: |
              ebookLink.value
        - name: title
          value:
            $$jsExpression: |
              title.value
    - name: deleteBookById
      mode: mutation
      query:
        kind: rest
        url:
          $$jsExpression: |
            `https://fake-json-server-4yn5.onrender.com/books/${parameters.id}`
        headers: []
        method: DELETE
      parameters:
        - name: id
          value:
            $$jsExpression: |
              dataGrid?.selection?.id
    - name: editBookById
      mode: mutation
      query:
        kind: rest
        url:
          $$jsExpression: |
            `https://fake-json-server-4yn5.onrender.com/books/${parameters.id}`
        headers: []
        method: PUT
      parameters:
        - name: id
          value:
            $$jsExpression: |
              dataGrid?.selection?.id
  display: shell
